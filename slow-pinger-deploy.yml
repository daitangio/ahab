version: '3.3'
services:
  # See https://docs.docker.com/engine/swarm/stack-deploy/
  # for a complete swarm deploy demo
  # slow_ping:
  #   build:
  #     context: .
  #     dockerfile: ./slow_ping/Dockerfile
  #     # See https://docs.docker.com/compose/compose-file/#args
  #     args:
  #       PING_HOST: "$PING_HOST"        
  #   image: slow-ping:latest
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         # 0.001 too slow
  #         cpus: "0.010"
  #         memory: 512M
  sonar:
    container_name: sonar7
    image: sonarqube:7.9.1-community
    restart: always
    ports:
      - "9000:9000"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.5"
          memory: 2048M
    volumes:
      - "$S/conf:/opt/sonarqube/conf"      
      - "$S/extensions:/opt/sonarqube/extensions"
      - "$S/data:/opt/sonarqube/data"
  telegraf:
    image: telegraf:1.3
    networks:
      - tig-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: telegraf-config
        target: /etc/telegraf/telegraf.conf
    deploy:
      restart_policy:
        condition: on-failure
      mode: global
      resources:
        limits:
          cpus: "0.5"          
  influxdb:
    image: influxdb:1.2
    networks:
      - tig-net
    deploy:
      restart_policy:
        condition: on-failure
      # placement:
      #   constraints:
      #     - node.role == worker
    environment:
     - INFLUXDB_ADMIN_ENABLED=true
     - INFLUXDB_ADMIN_USER=admin
     - INFLUXDB_ADMIN_PASSWORD=admin
    ports:
      # Admin
      - "8083:8083"
      # HTTP API port
      - "8086:8086"
    volumes:
      - influxdb:/var/lib/influxdb
  # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana:4.3.2
    ports:
      - "3000:3000"
    networks:
      - tig-net
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    volumes:
      - grafana-storage:/var/lib/grafana
configs:
  telegraf-config:
    file: $PWD/config/telegraf/telegraf.conf
networks:
  tig-net:
    driver: overlay
volumes:
  influxdb:
  grafana-storage: